package main

import (
	"fmt"
)


func swap(arr []int, i, j int) {
	arr[i], arr[j] = arr[j], arr[i]
}


func WavePattern(arr []int, x int) {
	n := len(arr)
	blockSize := 2*x + 1

//Forgot  to consider multiple blocks in written exam
	for start := 0; start+blockSize <= n; start += blockSize {
		end := start + blockSize
		block := arr[start:end]


		maxIndex := 0
		for i := 1; i < len(block); i++ {
			if block[i] > block[maxIndex] {
				maxIndex = i
			}
		}

		swap(block, maxIndex, x)

		for i := 0; i < x; i++ {
			for j := i + 1; j <= x-1; j++ {
				if block[i] > block[j] {
					swap(block, i, j)
				}
			}
		}

		for i := x + 1; i < len(block); i++ {
			for j := i + 1; j < len(block); j++ {
				if block[i] < block[j] {
					swap(block, i, j)
				}
			}
		}
	}
}
